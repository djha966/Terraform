import "tfconfig-functions" as config

allowed _list = ["aws_instance", "azurerm_virtualmachine",
"google_compute_instance"]

allResources = config.find_all_resources)

violatingResources = config.filter_attribute_not_in_list(allResources,
"type", allowed _list, true)

main = rule { length(violatingResources["messages"]) is 0 }

####################################################################################################################
################################################################################################

allowed_machine_types = [
"na-standard-1"ï¼Œ
"n1-standard-2",
"n1-standard-4",
"n1-standard-8",

main = rule {
  all tfplan. resources as r {
    r. attr.machine_type in allowed_machine_types
}}




Execute various statements and return a value.
### find_resources ###
# Find all resources of a specific type using the tfplan/v2 import.
# Include resources that are not being permanently deleted.
# Technically, this returns a map of resource changes.
find_resources = func(type) {
resources = filter tfplan. resource_changes as address, rc i
rc. type is type and rc.mode is "managed" and
(rc. change.actions contains "create" or rc. change.actions contains "update" or rc. change. actions contains "read" or (rc. change. actions contains "no-op" and rc. change.after is not null))
} return resources
